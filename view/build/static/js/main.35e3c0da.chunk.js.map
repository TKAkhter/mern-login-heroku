{"version":3,"sources":["core.js","context/Reducer.js","context/Context.js","pages/Login.jsx","pages/Signup.jsx","components/Header.jsx","components/Posts.jsx","pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","reducer","state","action","type","payload","firstName","lastName","email","access_token","_id","user","console","log","darkTheme","GlobalContext","createContext","data","ContextProvider","children","useReducer","dispatch","Provider","value","validationSchema","yup","required","password","min","Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","Login","history","useHistory","useContext","formik","useFormik","initialValues","onSubmit","values","axios","post","withCredentials","then","res","catch","e","ThemeProvider","Grid","container","component","sx","height","overflow","CssBaseline","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","Box","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","noValidate","handleSubmit","mt","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","onChange","handleChange","error","touched","Boolean","errors","helperText","FormControlLabel","control","Checkbox","Button","mb","onClick","push","SignUp","useState","redirect","setRedirect","to","spacing","justifyContent","Header","document","cookie","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","aria-label","mr","title","Posts","todo","settodo","itemChange","setItemChange","useEffect","get","description","style","padding","paddingRight","placeholder","List","map","eachTodo","ListItem","secondaryAction","delete","target","parentNode","ListItemText","primary","secondary","Home","params","App","isLogged","setIsLogged","exact","path","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35e3c0da.chunk.js","sourcesContent":["const dev = \"http://localhost:5000\";\nexport const baseUrl =\n  window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\n","\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"USER_LOGIN\": {\r\n      if (\r\n        action.payload.firstName &&\r\n        action.payload.lastName &&\r\n        action.payload.email &&\r\n        action.payload.access_token &&\r\n        action.payload._id) {\r\n\r\n        return { ...state, user: action.payload }\r\n\r\n      } else {\r\n        console.log(`invalid data in USER_LOGIN reducer `);\r\n        return state;\r\n      }\r\n    }\r\n    case \"USER_LOGOUT\": {\r\n      return { ...state, user: null } // set this to null on purpose, do not change\r\n    }\r\n    case \"TOGGLE_THEME\": {\r\n      return { ...state, darkTheme: !state.darkTheme } // set this to null on purpose, do not change\r\n    }\r\n\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport { reducer } from './Reducer';\r\n\r\nexport const GlobalContext = createContext(\"Initial Value\");\r\nlet data = {\r\n  darkTheme: true,\r\n  user: {}\r\n}\r\n\r\nexport default function ContextProvider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, data)\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n","// import \"./Header.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport * as yup from \"yup\";\r\nimport { baseUrl } from \"../core\";\r\n\r\nimport { GlobalContext } from \"../context/Context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Copyright = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href={baseUrl}>\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst theme = createTheme();\r\n\r\nconst Login = () => {\r\n  let history = useHistory();\r\n\r\n  let { dispatch } = useContext(GlobalContext);\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values);\r\n\r\n      axios\r\n        .post(\r\n          `${baseUrl}/api/v1/login`,\r\n          {\r\n            email: values.email,\r\n            password: values.password,\r\n          },\r\n          {\r\n            withCredentials: true,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n\r\n          if (res.data.email) {\r\n            dispatch({\r\n              type: \"USER_LOGIN\",\r\n              payload: {\r\n                firstName: res.data.firstName,\r\n                lastName: res.data.lastName,\r\n                email: res.data.email,\r\n                access_token: res.data.access_token,\r\n                _id: res.data._id,\r\n              },\r\n            });\r\n            // history.push(\"/\")\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"error: \", e);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <Grid\r\n          container\r\n          component=\"main\"\r\n          sx={{ height: \"100vh\", overflow: \"hidden\" }}\r\n        >\r\n          <CssBaseline />\r\n          <Grid\r\n            item\r\n            xs={false}\r\n            sm={4}\r\n            md={7}\r\n            sx={{\r\n              backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundColor: (t) =>\r\n                t.palette.mode === \"light\"\r\n                  ? t.palette.grey[50]\r\n                  : t.palette.grey[900],\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"center\",\r\n            }}\r\n          />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n            md={5}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n          >\r\n            <Box\r\n              sx={{\r\n                my: 8,\r\n                mx: 4,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign in\r\n              </Typography>\r\n              <Box\r\n                component=\"form\"\r\n                noValidate\r\n                onSubmit={formik.handleSubmit}\r\n                sx={{ mt: 1 }}\r\n              >\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Email Address\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                  autoFocus\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n                  error={\r\n                    formik.touched.password && Boolean(formik.errors.password)\r\n                  }\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                  color=\"primary\"\r\n                >\r\n                  Sign In\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                      Forgot password?\r\n                    </Link>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Link\r\n                      onClick={() => {\r\n                        history.push(\"/signup\");\r\n                      }}\r\n                      variant=\"body2\"\r\n                    >\r\n                      {\"Don't have an account? Sign Up\"}\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n                <Copyright sx={{ mt: 5 }} />\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// import \"./Header.css\";\r\nimport { useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport * as yup from \"yup\";\r\nimport { baseUrl } from \"../core\";\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup.string(\"Enter your First name\").required(\"Name is required\"),\r\n  lastName: yup.string(\"Enter your Last name\").required(\"Name is required\"),\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Copyright = (props) => {\r\n  return (\r\n    <Typography\r\n      variant=\"body2\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href={baseUrl}>\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nconst theme = createTheme();\r\n\r\nconst SignUp = () => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  let history = useHistory();\r\n\r\n  const formik = useFormik({\r\n    validationSchema: validationSchema,\r\n    initialValues: {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values);\r\n      axios\r\n        .post(`${baseUrl}/api/v1/user`, {\r\n          firstName: values.firstName,\r\n          lastName: values.lastName,\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n          if (res.data.email) {\r\n            // history.push(\"/login\");\r\n            setRedirect(true);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error: \", error);\r\n        });\r\n    },\r\n  });\r\n\r\n  return redirect ? (\r\n    <Redirect to=\"/login\" />\r\n  ) : (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <Grid\r\n          container\r\n          component=\"main\"\r\n          sx={{ height: \"100vh\", overflow: \"hidden\" }}\r\n        >\r\n          <CssBaseline />\r\n          <Grid\r\n            item\r\n            xs={false}\r\n            sm={4}\r\n            md={7}\r\n            sx={{\r\n              backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundColor: (t) =>\r\n                t.palette.mode === \"light\"\r\n                  ? t.palette.grey[50]\r\n                  : t.palette.grey[900],\r\n              backgroundSize: \"cover\",\r\n              backgroundPosition: \"center\",\r\n            }}\r\n          />\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={8}\r\n            md={5}\r\n            component={Paper}\r\n            elevation={6}\r\n            square\r\n          >\r\n            <Box\r\n              sx={{\r\n                my: 8,\r\n                mx: 4,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                <LockOutlinedIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n              </Typography>\r\n              <Box\r\n                component=\"form\"\r\n                noValidate\r\n                onSubmit={formik.handleSubmit}\r\n                sx={{ mt: 3 }}\r\n              >\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      autoComplete=\"given-name\"\r\n                      name=\"firstName\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"firstName\"\r\n                      label=\"First Name\"\r\n                      autoFocus\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      value={formik.values.name}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.name && Boolean(formik.errors.name)}\r\n                      helperText={formik.touched.name && formik.errors.name}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                      required\r\n                      fullWidth\r\n                      id=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      name=\"lastName\"\r\n                      autoComplete=\"given-name\"\r\n                      autoFocus\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      value={formik.values.name}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.name && Boolean(formik.errors.name)}\r\n                      helperText={formik.touched.name && formik.errors.name}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email Address\"\r\n                      name=\"email\"\r\n                      autoComplete=\"email\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      value={formik.values.email}\r\n                      onChange={formik.handleChange}\r\n                      error={\r\n                        formik.touched.email && Boolean(formik.errors.email)\r\n                      }\r\n                      helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      autoComplete=\"new-password\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      value={formik.values.password}\r\n                      onChange={formik.handleChange}\r\n                      error={\r\n                        formik.touched.password &&\r\n                        Boolean(formik.errors.password)\r\n                      }\r\n                      helperText={\r\n                        formik.touched.password && formik.errors.password\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\r\n                      }\r\n                      label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 3, mb: 2 }}\r\n                  color=\"primary\"\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                <Grid container justifyContent=\"flex-end\">\r\n                  <Grid item>\r\n                    <Link\r\n                      onClick={() => {\r\n                        history.push(\"/login\");\r\n                      }}\r\n                      variant=\"body2\"\r\n                    >\r\n                      Already have an account? Sign in\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n                <Copyright sx={{ mt: 5 }} />\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport { baseUrl } from \"../core\";\r\nimport { GlobalContext } from \"../context/Context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst Header = () => {\r\n  let history = useHistory();\r\n\r\n  let { dispatch } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>{console.log(document.cookie)}\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n              News\r\n            </Typography>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Home\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => {\r\n                axios\r\n                  .post(\r\n                    `${baseUrl}/api/v1/logout`,\r\n                    {},\r\n                    {\r\n                      withCredentials: true,\r\n                    }\r\n                  )\r\n                  .then((res) => {\r\n                    console.log(\"res +++: \", res.data);\r\n\r\n                    dispatch({\r\n                      type: \"USER_LOGOUT\",\r\n                    });\r\n                  });\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// import { useContext, useState, useEffect } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Box from \"@mui/material/Box\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport * as yup from \"yup\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { baseUrl } from \"../core\";\r\n\r\nimport { GlobalContext } from \"../context/Context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst validationSchema = yup.object({\r\n  title: yup.string(\"Enter your email\").required(\"Email is required\"),\r\n});\r\n\r\nconst Posts = () => {\r\n  let { state } = useContext(GlobalContext);\r\n\r\n  const [todo, settodo] = useState([]);\r\n  const [itemChange, setItemChange] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${baseUrl}/api/v1/post`, { withCredentials: true })\r\n      .then((res) => {\r\n        console.log(\"res: \", res.data);\r\n        settodo(res.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"error: \", e);\r\n      });\r\n  }, [itemChange]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n    },\r\n    onSubmit: function (values) {\r\n      console.log(\"values: \", values);\r\n      axios\r\n        .post(\r\n          `${baseUrl}/api/v1/post`,\r\n          {\r\n            title: values.title,\r\n            description: values.description,\r\n            firstName: state?.user?.firstName,\r\n            access_token: state.user.access_token,\r\n          },\r\n          { withCredentials: true }\r\n        )\r\n        .then((res) => {\r\n          console.log(\"res: \", res.data);\r\n          setItemChange(!itemChange);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error: \", error);\r\n        });\r\n    },\r\n    validationSchema: validationSchema,\r\n  });\r\n\r\n  const deletePost = (id) => {\r\n    axios\r\n      .delete(`${baseUrl}/api/v1/post`, {\r\n        data: {\r\n          id: id.target.parentNode.id,\r\n          access_token: state.user.access_token,\r\n        },\r\n        withCredentials: true,\r\n      })\r\n      .then((res) => {\r\n        console.log(\"res: \", res.data);\r\n        setItemChange(!itemChange);\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"error: \", e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ flexGrow: 1, m: 2 }}>\r\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n          Posts\r\n        </Typography>\r\n        <Box\r\n          component=\"form\"\r\n          noValidate\r\n          onSubmit={formik.handleSubmit}\r\n          sx={{ mt: 1 }}\r\n        >\r\n          <Paper style={{ margin: 16, padding: 16 }} elevation={3}>\r\n            <Grid container alignItems=\"center\" spacing={2}>\r\n              <Grid xs={5} md={10} item style={{ paddingRight: 16 }}>\r\n                <TextField\r\n                  fullWidth\r\n                  placeholder=\"Title\"\r\n                  color=\"primary\"\r\n                  id=\"outlined-basic\"\r\n                  label=\"Title\"\r\n                  variant=\"filled\"\r\n                  name=\"title\"\r\n                  value={formik.values.title}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.title && Boolean(formik.errors.title)}\r\n                  helperText={formik.touched.title && formik.errors.title}\r\n                />\r\n              </Grid>\r\n              <Grid xs={5} md={10} item style={{ paddingRight: 16 }}>\r\n                <TextField\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  id=\"outlined-basic\"\r\n                  placeholder=\"Description\"\r\n                  label=\"Description\"\r\n                  variant=\"filled\"\r\n                  name=\"description\"\r\n                  value={formik.values.description}\r\n                  onChange={formik.handleChange}\r\n                  error={\r\n                    formik.touched.description &&\r\n                    Boolean(formik.errors.description)\r\n                  }\r\n                  helperText={\r\n                    formik.touched.description && formik.errors.description\r\n                  }\r\n                />\r\n              </Grid>\r\n              <Grid xs={2} md={2} item>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"success\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Box>\r\n        <Paper style={{ margin: 16, padding: 16 }} elevation={3}>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            Recently Added:\r\n          </Typography>\r\n          <List spacing={3}>\r\n            {todo.map((eachTodo) => {\r\n              return (\r\n                <Paper\r\n                  style={{ margin: 10 }}\r\n                  elevation={3}\r\n                  id={eachTodo._id}\r\n                  key={eachTodo._id}\r\n                >\r\n                  <ListItem\r\n                    secondaryAction={\r\n                      <IconButton edge=\"end\" aria-label=\"delete\">\r\n                        <DeleteIcon\r\n                          onClick={(eachTodo) => deletePost(eachTodo)}\r\n                          id={eachTodo._id}\r\n                        />\r\n                      </IconButton>\r\n                    }\r\n                  >\r\n                    <ListItemText\r\n                      primary={eachTodo.title}\r\n                      secondary={\r\n                        eachTodo.description + \" By \" + eachTodo.firstName\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                </Paper>\r\n              );\r\n            })}\r\n          </List>\r\n        </Paper>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { baseUrl } from \"../core\";\r\nimport Header from \"../components/Header\";\r\nimport Posts from \"../components/Posts\";\r\n\r\nimport { GlobalContext } from \"../context/Context\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction Home() {\r\n  // const [profile, setProfile] = useState({});\r\n  let { state } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${baseUrl}/api/v1/profile`, {\r\n        withCredentials: true,\r\n        params: {\r\n          email: state.user.email,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"res +++: \", res.data);\r\n        // setProfile(res.data);\r\n      });\r\n  }, [state.user.access_token, state.user.email]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Posts />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Home from \"./pages/Home\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"./core\";\n\nfunction App() {\n  let [isLogged, setIsLogged] = useState(false);\n  // useEffect(() => {\n  //   axios\n  //     .get(`${baseUrl}/api/v1/getcookie`, { withCredentials: true })\n  //     .then((res) => {\n  //       setIsLogged(true);\n  //     })\n  //     .catch((e) => {\n  //       console.log(\"error: \", e);\n  //     });\n  // }, [isLogged]);\n  axios\n    .get(`${baseUrl}/api/v1/getcookie`, { withCredentials: true })\n    .then((res) => {\n      setIsLogged(true);\n    })\n    .catch((e) => {\n      console.log(\"error: \", e);\n      setIsLogged(false);\n    });\n  return (\n    <>\n      {isLogged ? (\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Redirect to=\"/\" />\n        </Switch>\n      ) : (\n        <Switch>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n\n          <Redirect to=\"/\" />\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ContextProvider from \"./context/Context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <Router>\n        <App />\n      </Router>\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}